CLASE 1  26/08

Programación --> PHP
Base de Datos --> SQL -- MySql
						 Oracle
						 Sql Server
				  NO SQL -- Mongada
							Firebase
							Dynamoda

Instalar para usar servidor: XAMPP Control Panel

Selecciono Apache y Start
Espero que aparezcan los Port: 80 (HTTP) y 443 (HTTPS)
Si el 80 no funciona o está ocupado tengo que abrir el Config, busco Listen: 80 y lo reemplazo por 8080

En Chrome: localhost:80  --> Me lleva a mi página servidor
disco C/Xampp/htdocs --> Creo una carpeta donde va a estar mi código
Arrastro la carpeta a VisualStudioCode
Creo index.php   --> SIEMPRE las lineas terminan con ;

<?php

echo "Hola Mundo";

?>

Para probar no se usa más el Chrome. Abrir postMan (si no abre, cerrar Chrome, abrir PostMan y volver a abrir Chrome normal)
En la barra de arriba están los métodos (GET, POST...) Realiza las peticiones que haríamos en el Chrome
Siempre me conviene usar el nombre del archivo

Se puede crear una Colección y empezar a guardar las peticiones que se hacen

Environment --> Para no tener que cambiarl las url según en qué ambiente esté, creo un Environment y una variable URL con mi IP.
Creo un ambiente nuevo en la tuerquita, manage environments
Para usar la variable, solamente pongo {{URL}}
Cuando cambio de ambiente y necesito cambiar la IP, solo le cambio el valor a mi variable.

CREAR UNA FUNCION EN PHP

function saludar($nombre){
   echo "Hola $nombre";
}

saludar("Mili");

En PHP se concatenan las cosas con . (punto)

Incluir un archivo en otro:
include 'funciones.php';   --> Muestra un warning si no lo encuentra
require 'funciones.php';   --> Error fatal si no encuentra, se detiene el programa
require_once 'funciones.php';  --> verifica que no esté ya incluido para que no rompa

Conviene en el index usar include, y en lo demás require_once, porque cuando voy saltando de clases, se me pueden pisar los include.

Crear una clase  --> Class
atributos --> modificador de acceso (public, private)
constructor --> function + __construct()

Ningún método de php se puede sobrecargar
Se puede pasar por parámetros el nombre de la variable, como ="" o =0
Si se hace con uno, se tiene que hacer con todos los siguientes. Los anteriores puede que no.

    function __construct($nombre,$dni)
    {
        $this->nombre =$nombre;
        $this->dni = $dni;
    }
	
	public function saludar ()
    {
        echo 'Hola '.$this->nombre;
    }

HERENCIA DE CLASES --> en lugar de los : para heredar se usa extends
Para usar el constructor, en vez de base se llama --> parent::__construct(parametros);

Implementar interfaz ADMIN --> Inscribirse - Rendir

